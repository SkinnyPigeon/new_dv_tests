from sqlalchemy import Column, String, Integer, DateTime, BigInteger, Numeric
from sqlalchemy.dialects.postgresql import ARRAY, JSON

ustan_table_definitions = {
    "ustan.serums_ids": {
        "id": Column("id", BigInteger, primary_key=True),
        "serums_id": Column("serums_id", Integer),
        "chi": Column("chi", BigInteger)
    },
    "ustan.hospital_doctors": {
        "id": Column("id", Integer, primary_key=True),
        "serums_id": Column("serums_id", Integer),
        "staff_id": Column("staff_id", Integer),
        "name": Column("name", String),
        "department_id": Column("department_id", Integer),
        "department_name": Column("department_name", String)
    },
    "ustan.tags": {
        "id": Column("id", Integer, primary_key=True),
        "tags": Column("tags", ARRAY(String)) 
    },
    "ustan.translated_tags": {
        "id": Column("id", Integer, primary_key=True),
        "tags": Column("tags", JSON) 
    },
    "ustan.cycles": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "regime_id": Column("regime_id", Integer),
        "intention_id": Column("intention_id", Integer),
        "cycle_id": Column("cycle_id", BigInteger),
        "drug_names": Column("drug_names", String(length=30)),
        "diagnosis": Column("diagnosis", String(length=30)),
        "init_appointment_date": Column("init_appointment_date", DateTime(timezone=False)),
        "elapsed_days": Column("elapsed_days", Integer),
        "interval_days": Column("interval_days", Integer),
        "appointment_date": Column("appointment_date", DateTime(timezone=False)),
        "intention": Column("intention", String(length=30)),
        "regime": Column("regime", String(length=30)),
        "cycle": Column("cycle", Integer),
        "p_ps": Column("p_ps", Integer),
        "ps": Column("ps", Integer),
        "nausea": Column("nausea", Integer),
        "vomiting": Column("vomiting", Integer),
        "diarrhoea": Column("diarrhoea", Integer),
        "constipation": Column("constipation", Integer),
        "oralMucositis": Column("oralMucositis", Integer),
        "oesophagitis": Column("oesophagitis", Integer),
        "cycle": Column("cycle", Integer),
        "neurotoxicity": Column("neurotoxicity", Integer),
        "handFoot": Column("handFoot", Integer),
        "skin": Column("skin", Integer),
        "hypersensitivity": Column("hypersensitivity", Integer),
        "fatigue": Column("fatigue", Integer),
        "required_doses": Column("required_doses", Numeric(10, 6))
    },
    "ustan.general": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "incidence_date": Column("incidence_date", DateTime(timezone=False)),
        "site_icd_10": Column("site_icd_10", String(5)),
        "name": Column("name", String(30)),
        "date_of_birth": Column("date_of_birth", DateTime(timezone=False)),
        "first_seen_date": Column("first_seen_date", DateTime(timezone=False)),
        "site": Column("site", String(5)),
        "histology": Column("histology", Integer),
        "primary": Column("primary", Integer),
        "metastasis1": Column("metastasis1", String(5)),
        "metastasis2": Column("metastasis2", String(5)),
        "metastasis3": Column("metastasis3", String(5)),
        "smid": Column("smid", Integer),
        "smid1": Column("smid1", Integer),
        "cong_heart_fail_flag": Column("cong_heart_fail_flag", Integer),
        "con_tiss_disease_rheum_flag": Column("con_tiss_disease_rheum_flag", Integer),
        "dementia_flag": Column("dementia_flag", Integer),
        "pulmonary_flag": Column("pulmonary_flag", Integer),
        "con_tiss_flag": Column("con_tiss_flag", Integer),
        "diabetes_flag": Column("diabetes_flag", Integer),
        "para_hemiplegia_flag": Column("para_hemiplegia_flag", Integer),
        "renal_flag": Column("renal_flag", Integer),
        "liver_flag": Column("liver_flag", Integer),
        "aids_hiv_flag": Column("aids_hiv_flag", Integer),
        "cancer_flag": Column("cancer_flag", Integer),
        "charlson_score": Column("charlson_score", Integer),
        "dob": Column("dob", DateTime(timezone=False)),
        "age": Column("age", Integer),
        "simd": Column("simd", Numeric(5, 2)),
        "simd1": Column("simd1", Numeric(5, 2)),
        "side": Column("side", Integer),
        "gender": Column("gender", Integer),
        "age_at_diagnosis": Column("age_at_diagnosis", Numeric(5, 2)),
        "weight": Column("weight", Numeric(5, 2)),
        "bmi": Column("bmi", Numeric(5, 2)),
        "height": Column("height", Numeric(5, 2)),
        "religion": Column("religion", Integer),
        "civil_st": Column("civil_st", Integer),
        "ref_hospital": Column("ref_hospital", Integer),
        "postcode_pre": Column("postcode_pre", String(2)),
        "postcode_suf": Column("postcode_suf", String(5)),
        "stage": Column("stage", Integer),
        "stage_detail": Column("stage_detail", String(2)),
        "tnm_t": Column("tnm_t", Integer),
        "tnm_t_detail": Column("tnm_t_detail", String(2)),
        "tnm_n": Column("tnm_n", Integer),
        "tnm_n_detail": Column("tnm_n_detail", String(2)),
        "tnm_m": Column("tnm_m", Integer),
        "perf_stat": Column("perf_stat", Integer),
        "smr01_flag": Column("smr01_flag", Integer),
        "postcode": Column("postcode", String(7)),
        "gp_name": Column("gp_name", String(30)),
        "death_flag": Column("death_flag", Integer),
        "survival_days": Column("survival_days", Integer),
        "dat_death": Column("dat_death", DateTime(timezone=False)),
        "gp_id": Column("gp_id", Integer)
    },
    "ustan.intentions": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "patient_id": Column("patient_id", Integer),
        "intention_id": Column("intention_id", Integer),
        "intention_seq": Column("intention_seq", Integer),
        "first_intention": Column("first_intention", String(12)),
        "regime_ratio": Column("regime_ratio", Integer),
        "cycle_ratio": Column("cycle_ratio", Integer),
        "intention": Column("intention", String(12)),
        "first_regime": Column("first_regime", String(16)),
        "init_appointment_date": Column("init_appointment_date", DateTime(timezone=False)),
        "elapsed_days": Column("elapsed_days", Integer),
        "appointment_date": Column("appointment_date", DateTime(timezone=False))
    },
    "ustan.patients": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "patient_id": Column("patient_id", Integer),
        "first_intention": Column("first_intention", String(12)),
        "appointment_date": Column("appointment_date", DateTime(timezone=False))
    },
    "ustan.regimes": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "intention_id": Column("intention_id", Integer),
        "regime_id": Column("regime_id", Integer),
        "regime_seq": Column("regime_seq", Integer),
        "regime_ratio": Column("regime_ratio", Integer),
        "cycle_ratio": Column("cycle_ratio", Integer),
        "intention": Column("intention", String(12)),
        "prev_regime": Column("prev_regime", String(16)),
        "first_regime": Column("first_regime", String(16)),
        "regime": Column("regime", String(16)),
        "interval_days": Column("interval_days", Integer),
        "elapsed_days": Column("elapsed_days", Integer),
        "init_appointment_date": Column("init_appointment_date", DateTime(timezone=False)),
        "appointment_date": Column("appointment_date", DateTime(timezone=False))
    },
    "ustan.smr01": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "incidence_date": Column("incidence_date", DateTime(timezone=False)),
        "admission_date": Column("admission_date", DateTime(timezone=False)),
        "length_of_stay": Column("length_of_stay", Integer),
        "other_condition1": Column("other_condition1", String(5)),
        "other_condition2": Column("other_condition2", String(5)),
        "other_condition3": Column("other_condition3", String(5)),
        "main_operation_b": Column("main_operation_b", String(5)),
        "discharge_date": Column("discharge_date", DateTime(timezone=False)),
        "waiting_list_type": Column("waiting_list_type", Integer),
        "main_condition": Column("main_condition", String(4)),
        "main_operation_a": Column("main_operation_a", String(4)),
        "marital_status": Column("marital_status", String(1)),
        "ethnic_group": Column("ethnic_group", String(2))
    },
    "ustan.smr06": {
        "id": Column("id", BigInteger, primary_key=True),
        "chi": Column("chi", BigInteger),
        "incidence_date": Column("incidence_date", DateTime(timezone=False)),
        "er_status": Column("er_status", Integer),
        "her2_status": Column("her2_status", Integer),
        "stage_clinical_t": Column("stage_clinical_t", String(2)),
        "stage_clinical_n": Column("stage_clinical_n", String(2)),
        "stage_clinical_m": Column("stage_clinical_m", String(2)),
        "num_positive": Column("num_positive", Integer),
        "pathological_tum_size": Column("pathological_tum_size", Integer)
    }
}